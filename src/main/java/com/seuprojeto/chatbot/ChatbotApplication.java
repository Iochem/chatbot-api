package com.seuprojeto.chatbot;

import com.seuprojeto.chatbot.entity.ClienteEntity;
import com.seuprojeto.chatbot.repository.ClienteRepository;
import com.seuprojeto.chatbot.repository.DadosRepository;
import com.seuprojeto.chatbot.service.AgendamentoService;

import java.util.Scanner;

public class ChatbotApplication {
    public static void main(String[] args) {
        System.out.println("ü§ñ Chatbot: Ol√°! Como posso ajudar voc√™?");
        System.out.println("Digite 'sair' caso queira encerrar o atendimento");

        //Iniciar o Scanner
        Scanner scanner = new Scanner(System.in);


        //Cliente informa nome para o cadastro
        System.out.print("Digite seu nome: ");
        String nomeCliente = scanner.nextLine();

        //Criar o objeto de cliente
        ClienteEntity clienteEntity = new ClienteEntity(nomeCliente);

        //Intanciar a classe dados
        DadosRepository dadosRepository = new DadosRepository();

        AgendamentoService agendamentoService = new AgendamentoService(dadosRepository);

        //Instanciar a classe ClienteRepository
        ClienteRepository clienteRepository = new ClienteRepository();



        System.out.println("ü§ñ Chatbot: Ol√°, " + nomeCliente + "! Em que posso ajudar?");
        System.out.println("Digite 'sair' caso queira encerrar o atendimento");

        String input;

        while(true){
            System.out.print("Voc√™: ");
            input = scanner.nextLine().toLowerCase(); // Converte a entrada para min√∫sculas

            // Respostas pr√©-definidas
            if (input.contains("agendar") || input.contains("marcar") || input.contains("hor√°rio")) {
                System.out.println("ü§ñ Chatbot: Temos os seguintes dias e hor√°rios dispon√≠veis:");
                dadosRepository.mostrarDiasHorarios();

                System.out.println("\nDigite um dia e hor√°rio (ex: 'Dia 3 14h00') para marcar: ");
                System.out.print("Voc√™:");
                String escolha = scanner.nextLine().toLowerCase().trim();
                agendamentoService.validarDiaHorario(escolha);
                boolean encontrado = agendamentoService.validarDiaHorario(escolha);

                if (encontrado) {
                    clienteEntity.setHorarioMarcado(escolha);
                    System.out.println("‚úÖ Agendamento confirmado para " + clienteEntity.getHorarioMarcado());
                }else {
                    System.out.println("‚ùå Hor√°rio  ou dia n√£o dispon√≠vel.");
                }

            } else if (input.contains("pre√ßo") || input.contains("valor") || input.contains("cortes")) {
                System.out.println("ü§ñ Chatbot: os pre√ßos s√£o: ");
                dadosRepository.mostrarCortes();


            } else if (input.contains("tchau") || input.contains("sair")) {
                System.out.println("ü§ñ Chatbot: At√© mais! Tenha um √≥timo dia!" + clienteEntity.getNome());
                break;
            }
            else{
                System.out.println("ü§ñ Chatbot: Desculpe, n√£o entendi.");
            }


        }
        //Fechar o scanner
        scanner.close();
    }
}
