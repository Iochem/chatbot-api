package com.seuprojeto.chatbot;

import com.seuprojeto.chatbot.entity.ClienteEntity;
import com.seuprojeto.chatbot.repository.ClienteRepository;
import com.seuprojeto.chatbot.repository.DadosRepository;
import com.seuprojeto.chatbot.service.AgendamentoService;
import com.seuprojeto.chatbot.service.ClienteService;

import java.util.Scanner;

public class ChatbotApplication {
    public static void main(String[] args) {
        System.out.println("ü§ñ Chatbot: Ol√°! Como posso ajudar voc√™?");
        System.out.println("Digite 'sair' caso queira encerrar o atendimento");

        //Iniciar o Scanner
        Scanner scanner = new Scanner(System.in);


        //Cliente informa nome para o cadastro
        System.out.print("Digite seu nome: ");
        String nomeCliente = scanner.nextLine();

        //Criar o objeto de cliente
        ClienteEntity clienteEntity = new ClienteEntity(nomeCliente);

        //Intanciar a classe dados
        DadosRepository dadosRepository = new DadosRepository();

        //Instanciar a classe AgendamentoService
        AgendamentoService agendamentoService = new AgendamentoService(dadosRepository);

        //Instanciar a classe ClienteRepository
        ClienteRepository clienteRepository = new ClienteRepository();

        //Instanciar a classe ClienteService
        ClienteService clienteService = new ClienteService(clienteRepository);


        System.out.println("ü§ñ Chatbot: Ol√°, " + nomeCliente + "! Em que posso ajudar?");
        System.out.println("Digite 'sair' caso queira encerrar o atendimento");

        String input;

        while(true){
            System.out.print("Voc√™: ");
            input = scanner.nextLine().toLowerCase(); // Converte a entrada para min√∫sculas

            // Respostas pr√©-definidas
            if (input.contains("dia") || input.contains("hora") || input.contains("hor√°rio")) {
                System.out.println("ü§ñ Chatbot: Temos os seguintes dias e hor√°rios dispon√≠veis:");
                dadosRepository.mostrarDiasHorarios();

            }else if (input.contains("marcar") || input.contains("agendar")  ) {
                //Verifica se o m√©todo do ClienteService retorna true
                while(true){
                    System.out.println("\nDigite um dia e hor√°rio (ex: 'Dia 3 14h00') para marcar:");
                    String escolha = scanner.nextLine().toLowerCase().trim();

                    clienteService.validarCliente(nomeCliente, escolha);
                    agendamentoService.validarDiaHorario(escolha);
                    // 1¬∫: Valida se o cliente j√° est√° agendado
                    boolean validoCliente = clienteService.validarCliente(nomeCliente, escolha);

                    if (!validoCliente) {
                        System.out.println("‚ùå Cliente ou hor√°rio j√° agendado.");
                        continue;
                    }

                    // 2¬∫: Valida se o hor√°rio existe nos dados dispon√≠veis
                    boolean validoHorario = agendamentoService.validarDiaHorario(escolha);

                    if (!validoHorario) {
                        System.out.println("‚ùå Hor√°rio indispon√≠vel.");
                        continue;
                    }

                    // 3¬∫: Tudo certo, agenda
                    clienteEntity.setHorarioMarcado(escolha);
                    clienteService.adicionarCliente(nomeCliente, escolha);

                    System.out.println("‚úÖ Agendamento confirmado para " + clienteEntity.getHorarioMarcado());
                    break;
                }
            } else if (input.contains("pre√ßo") || input.contains("valor") || input.contains("cortes")) {
                System.out.println("ü§ñ Chatbot: os pre√ßos s√£o: ");
                dadosRepository.mostrarCortes();


            } else if (input.contains("tchau") || input.contains("sair")) {
                System.out.println("ü§ñ Chatbot: At√© mais! Tenha um √≥timo dia!" + clienteEntity.getNome());
                break;
            }
            else{
                System.out.println("ü§ñ Chatbot: Desculpe, n√£o entendi.");
            }


        }
        //Fechar o scanner
        scanner.close();
    }
}
